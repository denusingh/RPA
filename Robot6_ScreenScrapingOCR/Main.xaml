<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="774.4,4386.4" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="30">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>System.Runtime.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="32">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="593.6,4221.6" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="varProductName" />
      <Variable x:TypeArguments="x:String" Name="OCRoutput" />
      <Variable x:TypeArguments="s:String[]" Name="filelist" />
      <Variable x:TypeArguments="x:String" Name="varCompanyName" />
      <Variable x:TypeArguments="x:String" Name="varTestDate" />
      <Variable x:TypeArguments="x:String" Name="modelName" />
      <Variable x:TypeArguments="x:String" Name="varTradeMark" />
      <Variable x:TypeArguments="x:String" Name="varAddress" />
      <Variable x:TypeArguments="x:String" Name="varPreparedFor" />
      <Variable x:TypeArguments="x:String" Name="varAddress2" />
      <Variable x:TypeArguments="x:String" Name="varReport" />
      <Variable x:TypeArguments="x:String" Name="varReportNumber" />
      <Variable x:TypeArguments="x:String" Name="varPreparedBy" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="552,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[filelist]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles("Scanned Documents","*.pdf")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="552,4028.8" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[filelist]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Private: Body" sap:VirtualizedContainerService.HintSize="516.8,3894.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start Process" FileName="[file.ToString]" sap:VirtualizedContainerService.HintSize="475.2,88" sap2010:WorkflowViewState.IdRef="StartProcess_1" />
            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey 'acrord32.exe BCTC-78352...'" sap:VirtualizedContainerService.HintSize="475.2,156" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="Y/y" KeyModifiers="Ctrl">
              <ui:SendHotkey.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d42d9d49-fbe6-46bd-aae3-c9d7584440cb" InformativeScreenshot="67ee5ad871e4ee9b6d83b876a7deb65c" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Acrobat Reader DC' /&gt;&#xA;&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&#xA;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;&#xA;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:SendHotkey.Target>
            </ui:SendHotkey>
            <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'acrord32.exe  Zoom To'" sap:VirtualizedContainerService.HintSize="475.2,532.8" sap2010:WorkflowViewState.IdRef="WindowScope_1" InformativeScreenshot="93e86a52c1994c1d4d099ddd54656431" Selector="&lt;wnd app='acrord32.exe' cls='#32770' title='Zoom To' /&gt;">
              <ui:WindowScope.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="375.2,385.6" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'Edit'" sap:VirtualizedContainerService.HintSize="333.6,135.2" sap2010:WorkflowViewState.IdRef="TypeInto_1" Text="50">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0a6415af-ff16-4f2d-882d-cc86440b6bbc" InformativeScreenshot="5200ccb67827589415371ef264792a24" Selector="&lt;wnd aaname='Magnification:' cls='ComboBoxEx32' /&gt;&lt;wnd aaname='Magnification:' cls='ComboBox' /&gt;&lt;wnd aaname='Magnification:' cls='Edit' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:TypeInto.Target>
                    </ui:TypeInto>
                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="enter" KeyModifiers="None" SpecialKey="True">
                      <ui:SendHotkey.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="880cac44-16fe-4742-b93a-20b2130aaadf">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:SendHotkey.Target>
                    </ui:SendHotkey>
                  </Sequence>
                </ActivityAction>
              </ui:WindowScope.Body>
            </ui:WindowScope>
            <Sequence sap:VirtualizedContainerService.HintSize="475.2,2179.2" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'BCTC 7835 Acrobatsd'" sap:VirtualizedContainerService.HintSize="433.6,2086.4" sap2010:WorkflowViewState.IdRef="WindowScope_3" InformativeScreenshot="b99ae5be849c192b4ebbe6e8075c292f" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Acrobat Reader DC' /&gt;">
                <ui:WindowScope.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="375.2,1939.2" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'AVL_AVView'" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_2">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:MicrosoftOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_3" Image="[Image]" Language="English (United Kingdom)" Profile="Screen" Scale="4" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="24db33c0-c763-43a1-9e61-1f2440113709" InformativeScreenshot="af721ee9be7b79997eb6d498766a3e7a" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="502, 238, 332, 24" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="x:String">[varProductName]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'AVL_AVView'" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_4">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_2" Image="[Image]" Scale="4" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="92b2290e-5ef0-4814-9feb-f3fda8c2a100" InformativeScreenshot="b8f8158baa637aa8b3895d2d83c7108d" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="502, 292, 330, 33" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="x:String">[modelName]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'AVL_AVView'" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_3">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_1" Image="[Image]" Scale="4" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="92b2290e-5ef0-4814-9feb-f3fda8c2a100" InformativeScreenshot="aed59a1608ef0a946896b35963ecbaad" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="503, 332, 330, 29" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="x:String">[varPreparedFor]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'AVL_AVView'" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_7">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:MicrosoftOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_5" Image="[Image]" Language="English (United Kingdom)" Profile="Screen" Scale="4" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="24db33c0-c763-43a1-9e61-1f2440113709" InformativeScreenshot="caf75cda3802339e1b0f550ef5f85bcb" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="501, 361, 333, 23" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="x:String">[varAddress]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'AVL_AVView'" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_8">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:MicrosoftOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_6" Image="[Image]" Language="English (United Kingdom)" Profile="Screen" Scale="4" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="24db33c0-c763-43a1-9e61-1f2440113709" InformativeScreenshot="9e1d51fa33b63215c69105f787507238" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="501, 388, 332, 28" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="x:String">[varPreparedBy]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'AVL_AVView'" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_5">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_3" Image="[Image]" Scale="4" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="92b2290e-5ef0-4814-9feb-f3fda8c2a100" InformativeScreenshot="80b7068a35d6e9d9c49201a0b7933e7c" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="501, 420, 333, 23" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="x:String">[varAddress2]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'AVL_AVView'" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_9">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:MicrosoftOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_7" Image="[Image]" Language="English (United Kingdom)" Profile="Screen" Scale="4" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="24db33c0-c763-43a1-9e61-1f2440113709" InformativeScreenshot="76da648f2e0bf4badd45082f8cc626ef" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="504, 449, 330, 24" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="x:String">[varTestDate]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'AVL_AVView'" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_10">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:MicrosoftOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_8" Image="[Image]" Language="English (United Kingdom)" Profile="Screen" Scale="4" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="24db33c0-c763-43a1-9e61-1f2440113709" InformativeScreenshot="aace9d381d92830cffa756f7f99dded4" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="504, 480, 327, 24" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="x:String">[varReport]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'AVL_AVView'" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_11">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:MicrosoftOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_9" Image="[Image]" Language="English (United Kingdom)" Profile="Screen" Scale="4" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="24db33c0-c763-43a1-9e61-1f2440113709" InformativeScreenshot="0dd5792809e9ea18a35f0b57d2f689a0" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="504, 510, 328, 24" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="x:String">[varReportNumber]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                    </Sequence>
                  </ActivityAction>
                </ui:WindowScope.Body>
              </ui:WindowScope>
            </Sequence>
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="475.2,231.2" sap2010:WorkflowViewState.IdRef="CommentOut_1">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="375.2,152.8" sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;Product Name&quot; +varProductName+ vbCr+&#xA;&quot;Model Name&quot;+modelName+ vbcr+&#xA;&quot;Prepared For&quot; +varPreparedFor+vbcr+&#xA;&quot;Address&quot; +varAddress+vbcr+&#xA;&quot;Prepared By&quot; +varPreparedBy+vbcr+&#xA;&quot;Address&quot; +varAddress2+vbcr+&#xA;&quot;Test Date &quot; +varTestDate + vbCr+&#xA;&quot;Date of Report &quot;+varReport+ vbCr+&#xA;&quot;Report No: &quot;+varReportNumber]" />
                </Sequence>
              </ui:CommentOut.Body>
            </ui:CommentOut>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="475.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Product Name&quot; +varProductName+ vbCr+&#xA;&quot;Model Name&quot;+modelName+ vbcr+&#xA;&quot;Prepared For&quot; +varPreparedFor+vbcr+&#xA;&quot;Address&quot; +varAddress+vbcr+&#xA;&quot;Prepared By&quot; +varPreparedBy+vbcr+&#xA;&quot;Address&quot; +varAddress2+vbcr+&#xA;&quot;Test Date &quot; +varTestDate + vbCr+&#xA;&quot;Date of Report &quot;+varReport+ vbCr+&#xA;&quot;Report No: &quot;+varReportNumber]" />
            <ui:AppendLine DisplayName="Append Line" FileName="AppendFile.txt" sap:VirtualizedContainerService.HintSize="475.2,134.4" sap2010:WorkflowViewState.IdRef="AppendLine_1" Text="[&quot;Product Name &quot; +varProductName+ vbCr+&#xD;&#xA;&quot;Model Name &quot;+modelName+ vbcr+&#xD;&#xA;&quot;Prepared For &quot; +varPreparedFor+vbcr+&#xD;&#xA;&quot;Address &quot; +varAddress+vbcr+&#xD;&#xA;&quot;Prepared By &quot; +varPreparedBy+vbcr+&#xD;&#xA;&quot;Address &quot; +varAddress2+vbcr+&#xD;&#xA;&quot;Test Date &quot; +varTestDate + vbCr+&#xD;&#xA;&quot;Date of Report &quot;+varReport+ vbCr+&#xD;&#xA;&quot;Report No: &quot;+varReportNumber +vbcr +vbcr]" UseDefaultEncoding="False" />
            <ui:CloseApplication DisplayName="Close Application 'acrord32.exe Adobe'" sap:VirtualizedContainerService.HintSize="475.2,107.2" sap2010:WorkflowViewState.IdRef="CloseApplication_1">
              <ui:CloseApplication.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="45f3f43b-3805-4573-8bf6-9a26e3f10660" InformativeScreenshot="eb4a39fb5fafc1f885bf533c79c6139e" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Acrobat Reader DC' /&gt;&#xA;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:CloseApplication.Target>
            </ui:CloseApplication>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>